XMLRPC access
=============
vct.core can be accessed from an xmlrpc interface.

We start the server:

>>> from vct.core.xmlrpc import Server
>>> server = Server('localhost', 0)
listening on localhost:0
>>> port = server.server.server_address[1]
>>> server.start(daemon=True)
>>> import time; time.sleep(0.5)

First we connect to the xmlrpc service

>>> import xmlrpclib
>>> s = xmlrpclib.ServerProxy('http://localhost:%s' % port)

# Print list of available methods

# TODO : change xmllrpc exposition to obtain:
#>>> print s.system.db.listMethods()
>>> print s.system.listMethods()
['delete', 'get_by_data', 'get_by_uid', 'get_model', 'put',
'system.listMethods', 'system.methodHelp', 'system.methodSignature']

We can introspect a model:

>>> from pprint import pprint
>>> model = s.get_model('observation')
>>> model.keys()
['status', 'title', 'text', 'image', 'link', 'date']
>>> pprint(model.values()[0])
    {'default': None,
     'description': 'status of the action',
     'max_length': None,
     'min_length': 0,
     'order': 26,
     'readonly': False,
     'required': False,
     'title': 'status',
     'type': 'textline'}


We can use the "get" method of the database:

>>> print s.get_by_data({})
[0, []]

We try to save an item

>>> data = {'type':'patient', 'name':'john'}
>>> s.put('frsecu', 1234, data)
0

We try to retrieve the object given the uid:

>>> pprint(s.get_by_uid('frsecu', 1234), width=1)
[1,
 [{'data': {'name': 'john',
            'type': 'patient'},
   'uids': {'frsecu': 1234}}]]

We can also do a search by any data key:

>>> pprint(s.get_by_data({'name':'john'}), width=1)
[1,
 [{'data': {'name': 'john',
            'type': 'patient'},
   'uids': {'frsecu': 1234}}]]


We can delete the item:

>>> s.delete('frsecu', 1234)
0
>>> s.get_by_uid('frsecu', 1234)
[0, []]

>>> server.stop()

